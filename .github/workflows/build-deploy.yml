name: Deploy

on:
  push:
    branches:
      - timetravel
  workflow_dispatch:
    inputs:
      target_env:
        description: "dev"
        required: true
      target_image_name:
        description: "metabase:dev"
        required: true
      target_image_version:
        description: "Docker image version"
        required: true

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: metabase
  AWS_ACCOUNT_ID: "321036660250"
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
jobs:
  build-image:
    name: Build and Push Docker image
    runs-on: ubuntu-latest
    outputs:
      image-name: ${{ steps.push-image.outputs.image-name }}
      image-tag: ${{ steps.push-image.outputs.image-tag }}
      image-registry: ${{ steps.push-image.outputs.image-registry }}
    environment: dev

    steps:
      - name: Send Slack Notification Start(APP-BE)
        uses: act10ns/slack@v2
        with:
          status: Build and Push Docker image
          channel: "#actuals-infra"
          message: Starting to build and push docker image
        if: always()
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Docker
        uses: docker/setup-buildx-action@v1

      - name: Build, tag and push
        id: push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # Push the tagged image to the ECR repository
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "ECR_REGISTRY : ${ECR_REGISTRY}"
          echo "image-registry=$ECR_REGISTRY" >> $GITHUB_OUTPUT
          echo "image-name=$ECR_REPOSITORY" >> $GITHUB_OUTPUT
          echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
      - name: Send Slack Notification Complete(APP-BE)
        uses: act10ns/slack@v2
        with:
          channel: "#actuals-infra"
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
  # deploy:
  #   needs: build-image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout K8s Config Repo
  #       uses: actions/checkout@v2
  #     - name: Trigger Workflow in ArgoCD Apps Manifest Repository
  #       run: |
  #         repo_owner="narendracode"
  #         repo_name="example-assets"
  #         event_type="trigger-workflow-metabase"
  #         target_env="dev"
  #         target_image_registry="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
  #         target_image_repository="${{ needs.build-image.outputs.image-name }}"
  #         target_image_version="${{ needs.build-image.outputs.image-tag }}"
  #         target_app="metabase"
  #         echo "Debug Outputs : $target_image_registry"

  #         curl -L \
  #           -X POST \
  #           -H "Accept: application/vnd.github+json" \
  #           -H "Authorization: Bearer ${{ secrets.PAT }}" \
  #           -H "X-GitHub-Api-Version: 2022-11-28" \
  #           https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
  #           -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"target_env\": \"$target_env\", \"target_image_registry\": \"$target_image_registry\", \"target_image_repository\": \"$target_image_repository\", \"target_image_version\": \"$target_image_version\", \"target_app\": \"$target_app\", \"unit\": false, \"integration\": true}}"
